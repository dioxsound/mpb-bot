import formatCurrency from "../../services/format_currency.js";

export default class BankProfileView {
    static bankResponse(user, bank, context) {
        if (!user || !bank) {
            return BankProfileView.infoNotFound(user);
        }

        const positionDictionary = {
            1: { name: "–ì–æ—Ä–µ–Ω–æ—Å–µ—Ü", emoji: "ü™ô", pronouns: "—Ç–≤–æ–π" },
            2: { name: "–ò–∑—É–≤–µ—Ä", emoji: "ü™ô", pronouns: "—Ç–≤–æ–π" },
            3: { name: "–ú–µ—Å—Ç–Ω—ã–π –ë–æ–≥", emoji: "üí∏", pronouns: "–í–∞—à" },
            4: { name: "–ü—Ä–∞–≤–∞—è —Ä—É–∫–∞", emoji: "üíé", pronouns: "–í–∞—à" },
            5: { name: "–°–æ–∑–∏–¥–∞—Ç–µ–ª—å", emoji: "ü§¥üèª", pronouns: "–í–∞—à" },
        };

        const positionData = positionDictionary[user.user_position] || {
            name: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            emoji: "‚ùì",
            pronouns: "—Ç–≤–æ–µ–º",
        };
        const positionText = user.user_name ? user.user_name : positionData.name;
        const positionEmoji = positionData.emoji;
        const pronouns = positionData.pronouns;

        const formattedBankOne = formatCurrency(bank.bank_acc_one);
        const formattedBankTwo = formatCurrency(bank.bank_acc_two);

        let profileHeader;
        if (user.user_id == context.from.id) {
            profileHeader = `${positionEmoji} <b>${positionText}, ${pronouns} —Ç–µ–∫—É—â–∏–π –±–∞–Ω–∫:</b>`;
        } else {
            profileHeader = `<b>üëÅ –ë–∞–Ω–∫ <a href="tg://user?id=${user.user_id}">${user.user_name}</a>'–∞ (${positionData.name}):</b>`;
        }

        const bankInfo =
            `  ‚Äì   ${bank.bank_name || "–°–º–∏—Ä–Ω–æ—Ñ—Ñ –°—Ç–∞–Ω–¥–∞—Ä—Ç (S-Bank)"}:\n` +
            `       <code>${bank.bank_id}</code>\n` +
            `  ‚Äì   1-—ã–π —Å—á–µ—Ç: <code>${formattedBankOne}</code>\n` +
            `  ‚Äì   2-–æ–π —Å—á–µ—Ç: <code>${formattedBankTwo}</code>`;

        return profileHeader + "\n" + bankInfo;
    }

    static infoNotFound(user) {
        return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è: </b>` + `<code>–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ${user} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!</code>`;
    }

    static userNotFound() {
        return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è: </b>` + `<code>–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!</code>`;
    }

    static errorFetchingProfile() {
        return `<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>`;
    }
}
