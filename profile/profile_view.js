import wrapText from "./utils/wrap_text.js";
export default class ProfileView {

    static profileResponse(anotherUserId, result, context) {
        const user = result;
        if (!user) {
            return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.";
        }

        const user_name = user.user_name;
        const user_id = anotherUserId;
        const user_passport = user.user_passport;
        const user_level = user.user_level;
        const position = user.user_position;
        const date_spawn = user.date_spawn;
        const user_status = user.user_status;
        let ban_reason = user.ban_reason;

        if (ban_reason) {
            ban_reason = wrapText(ban_reason, 16);
        }

        const positionDictionary = {
            1: { name: "–ì–æ—Ä–µ–Ω–æ—Å–µ—Ü", emoji: "üßü‚Äç‚ôÇÔ∏è", pronouns: "—Ç–≤–æ–∏" },
            2: { name: "–ò–∑—É–≤–µ—Ä", emoji: "üé≠", pronouns: "—Ç–≤–æ–∏" },
            3: { name: "–ú–µ—Å—Ç–Ω—ã–π –ë–æ–≥", emoji: "‚õ©", pronouns: "—Ç–≤–æ–∏" },
            4: { name: "–ü—Ä–∞–≤–∞—è —Ä—É–∫–∞", emoji: "ü´¥üèº", pronouns: "—Ç–≤–æ–∏" },
            5: { name: "–°–æ–∑–∏–¥–∞—Ç–µ–ª—å", emoji: "ü§¥üèª", pronouns: "–≤–∞—à–∏" },
        };

        const positionData = positionDictionary[position] || { name: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", emoji: "‚ùì", pronouns: "—Ç–≤–æ–∏" };
        const positionText = positionData.name;
        const positionEmoji = positionData.emoji;
        const pronouns = positionData.pronouns;

        let formattedDateString;
        if (position === 5) {
            formattedDateString = "‚ñà‚ñà.‚ñà‚ñà.‚ñà‚ñà";
        } else {
            const formattedDate = new Date(date_spawn);
            const day = String(formattedDate.getDate()).padStart(2, "0");
            const month = String(formattedDate.getMonth() + 1).padStart(2, "0");
            const year = String(formattedDate.getFullYear()).slice(2);
            formattedDateString = `${day}.${month}.${year}`;
        }

        let profileHeader;
        if (user_id === context.from.id) {
            profileHeader = `${positionEmoji} <b><a href="tg://user?id=${user_id}">${user_name}</a>, ${pronouns} –¥–∞–Ω–Ω—ã–µ:</b>`;
        } else {
            profileHeader = `<b>üë§ –°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ <a href="tg://user?id=${user_id}">${user_name}</a>:</b>`;
        }

        let profileStatus;
        if (user_status === "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω") {
            profileStatus = `\n  ‚Äì   –°—Ç–∞—Ç—É—Å: <code>—É—Å—Ç—Ä–∞–Ω–µ–Ω</code>` +
                `\n  ‚Äì   –ü—Ä–∏—á–∏–Ω–∞: <code>${ban_reason}</code>`;
        } else {
            profileStatus = `\n  ‚Äì   –°—Ç–∞—Ç—É—Å: <code>${user_status}</code>`;
        }

        return context.send(
            profileHeader +
            `\n  ‚Äì   –ü–∞—Å–ø–æ—Ä—Ç: <code>${user_passport}</code>` +
            `\n  ‚Äì   –£—Ä–æ–≤–µ–Ω—å: <code>${user_level}</code>` +
            `\n  ‚Äì   –ü–æ–ª–æ–∂–µ–Ω–∏–µ: <code>${positionText}</code>` +
            `\n  ‚Äì   –î–∞—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è: <code>${formattedDateString}</code>` +
            profileStatus,
            {
                parse_mode: "HTML",
            }
        );
    }
}
