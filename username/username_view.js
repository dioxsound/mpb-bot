import formatCurrency from "../services/format_currency.js";

export default class UsernameView {
    static usernameResponse(success, changeUsernameResult, cost) {
        if (success) {
            const newUsername = changeUsernameResult.user_name;
            return `<b>ü™™ –£—Å–ø–µ—à–Ω–∞—è —Å–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞:</b>\n` + 
            `  ‚Äì   –ù–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º: <code>${newUsername}</code>\n` +
            `  ‚Äì   –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: <code>${formatCurrency(cost)}</code>\n`;
        } else {
            return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞: </b>` + `<code>–Ω–∞–¥–æ –æ—Ç 3 –¥–æ 12 —Å–∏–º–≤–æ–ª–æ–≤!</code>`;
        }
    }

    static insufficientFunds(deficiency) {
        return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞: </b>` + `<code>–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${deficiency}</code>`;
    }

    static forbiddenUsername() {
        return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞: </b>` + `<code>—Ç–∞–∫–æ–π –Ω–∏–∫ –∑–∞–ø—Ä–µ—â–µ–Ω!</code>`;
    }

    static invalidCharacters() {
        return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞: </b>` + `<code>—Ç–æ–ª—å–∫–æ a-Z–∞-–Ø0-9_</code>`;
    }

    static sameUsername() {
        return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞: </b>` + `<code>–Ω–µ–ª—å–∑—è —Å–º–µ–Ω–∏—Ç—å –Ω–∞ —Ç–æ—Ç –∂–µ –Ω–∏–∫!</code>`;
    }

    static noUsernameProvided(username, cost) {
        return (
            `<b>ü™™ –¢–µ–∫—É—â–∏–π –Ω–∏–∫–Ω–µ–π–º: <code>${username}</code></b>\n` +
            `  ‚Äì   –°–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞: <code>–Ω–∏–∫–Ω–µ–π–º [–Ω–∏–∫]</code>\n` +
            `  ‚Äì   –£—Å–ª–æ–≤–∏—è –¥–ª—è [–Ω–∏–∫]: <code>–æ—Ç 3 –¥–æ 12 —Å–º.</code>\n` +
            `  ‚Äì   –°—Ç–æ–∏–º–æ—Å—Ç—å: <code>${formatCurrency(cost)}</code>`
        );
    }

    static usernameNotUnique() {
        return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞: </b>` + `<code>—Ç–∞–∫–æ–π –Ω–∏–∫–Ω–µ–π–º –∑–∞–Ω—è—Ç!</code>`;
    }

    static errorChangingUsername(error) {
        return `<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞: </b>` + `<code>${error}</code>`;
    }
}
